buildscript {
	ext {
		restdocsApiSpecVersion = '0.18.2'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'

	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.rosie'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'io.rest-assured:rest-assured'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
	testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"

	swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

test {
	useJUnitPlatform()
}

bootJar {
	dependsOn tasks.withType(GenerateSwaggerUI) 
}

openapi3 { 
	setServer("http://localhost:8080")
	title = "로지 API Docs" 
	description = "로지네 API 명세서" 
	version = "0.0.1" 
	format = "yaml" 
}

tasks.withType(GenerateSwaggerUI) { 
	dependsOn 'openapi3' 
}

swaggerSources { 
	rosieProject { 
		setInputFile(file("build/api-spec/openapi3.yaml")) 
	}
}


generateSwaggerUIRosieProject {
	doLast { 
		copy { 
			from outputDir.toPath()
			into "src/main/resources/static/docs/"
		}
	}
}
